name: Create Tag

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to tag'
        required: true
        type: string
        default: 'main'
      tag:
        description: 'Tag name (e.g., client/bechem-1.0.0)'
        required: true
        type: string
      message:
        description: 'Tag message (optional)'
        required: false
        type: string
        default: ''

permissions:
  contents: write

jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Validate tag format and version
        run: |
          BRANCH="${{ inputs.branch }}"
          TAG="${{ inputs.tag }}"

          # Expected format: branchName-version (e.g., client/bechem-1.0.0)
          # Extract version from tag (everything after the last dash)
          TAG_VERSION="${TAG##*-}"
          # Extract branch name from tag (everything before the last dash)
          TAG_BRANCH="${TAG%-*}"

          echo "Branch: $BRANCH"
          echo "Tag: $TAG"
          echo "Extracted branch from tag: $TAG_BRANCH"
          echo "Extracted version from tag: $TAG_VERSION"

          # Validate that tag starts with branch name
          if [[ "$TAG" != "$BRANCH-"* ]]; then
            echo "❌ Tag must start with branch name. Expected format: $BRANCH-x.y.z"
            echo "   Example: $BRANCH-1.0.0"
            exit 1
          fi

          # Validate version format (x.y.z)
          if [[ ! "$TAG_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid version format. Expected format: x.y.z (e.g., 1.0.0)"
            exit 1
          fi

          # Read package.json version
          if [ ! -f "package.json" ]; then
            echo "❌ package.json not found in branch $BRANCH"
            exit 1
          fi

          PACKAGE_VERSION=$(node -p "require('./package.json').version")

          echo "Package.json version: $PACKAGE_VERSION"

          # Compare versions
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "❌ Version mismatch!"
            echo "   Tag version: $TAG_VERSION"
            echo "   package.json version: $PACKAGE_VERSION"
            echo "   Tag must match package.json version on branch $BRANCH"
            exit 1
          fi

          echo "✅ Tag format is valid"
          echo "✅ Version matches package.json ($PACKAGE_VERSION)"

      - name: Check if tag already exists
        run: |
          if git rev-parse "${{ inputs.tag }}" >/dev/null 2>&1; then
            echo "❌ Tag ${{ inputs.tag }} already exists"
            exit 1
          fi
          echo "✅ Tag ${{ inputs.tag }} is available"

      - name: Create and push tag
        run: |
          if [ -n "${{ inputs.message }}" ]; then
            git tag -a "${{ inputs.tag }}" -m "${{ inputs.message }}"
          else
            git tag -a "${{ inputs.tag }}" -m "Release ${{ inputs.tag }}"
          fi
          git push origin "${{ inputs.tag }}"

      - name: Summary
        run: |
          echo "### Tag Created Successfully ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag:** \`${{ inputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** \`${{ inputs.branch }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** \`$(git rev-parse HEAD)\`" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ inputs.message }}" ]; then
            echo "- **Message:** ${{ inputs.message }}" >> $GITHUB_STEP_SUMMARY
          fi
